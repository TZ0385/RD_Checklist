专业技能
========

原则
----
* 经典原理性书籍为第一原则
* 至少完整看完与练习好如下其中一本

  + 《深入理解计算机系统》

  + 《UNIX环境高级编程》

* "Don't repeat yourself" (DRY) 
  
  + 在规避过渡优化的前提下，重复2遍以上的操作就要提前考虑优化

* 不是必须项，但是是技术路上的助推器

  + 有一个稳定的翻墙渠道，并能使用英文进行快速精准检索技术问题，为什么不用中文？懂的都懂...

  + 使用AI作为辅助工具(ChatGPT/Copilot/Ollama...) 提示：尽信书，不如无书

基础必备
--------

基本环境
~~~~~~~~

安装一个Linux发行版
"""""""""""""""""""

* 推荐安装Kali Linux：https://www.kali.org

* Ubuntu/Debian/Fedora 也挺不错的

* 《鸟哥的Linux私房菜 基础篇》值得通读并实操

Shell用起来
"""""""""""
* 可以随着教程粗略学习一遍： https://github.com/52fhy/shell-book

* 推荐扩展了解的几个Shell： zsh/fish/tcsh

* man man or RTFM

熟练 Vim
"""""""""

* 实战至少 3 回合：http://coolshell.cn/articles/5426.html

* 熟练 Vim 后搜索：[ zsh | bash | fish | firefox | vscode | idea | ... ] vim keybindings，会有惊喜


编码能力
~~~~~~~~~~
上手 Python
"""""""""""""""""""
* 优点：学习成本很低，能够快速实现demo，而且大数据，机器学习也有一席之地
* 官方手册

  + 至少过一遍，这都没过一遍，视野会局限

  + 行之说：「我没看过 Python 的书，却熟读官方手册……」

* https://www.python.org/dev/peps/pep-0008/
* http://learnpythonthehardway.org/book/

试试 Golang？
"""""""""""""""
* 优点：学习成本低，效率高，可跨平台交叉编译二进制静态文件
* 官方手册
* https://golang.google.cn/doc/effective_go
* 《The Go Programming Language》

快速上手一门语言的方法论
""""""""""""""""""""""""
* 进程，线程，锁，并发，并行这些概念清晰理解 

* 编程语言的本质：数据结构 + 程序控制流 + 数据与程序的相互转化

* 程序控制流：1. 顺序 2. 分支  3. 循环

* 编程语言常见的数据类型/结构：

  + 基本数据类型：整数、浮点数、字符、布尔值

  + 引用数据类型：数组、结构体、类

  + 复合数据类型：字符串、集合、映射（字典）

* 然后还有什么？文件I/O、网络通信之类的接口调用一下

* 先用起来，作用域、生命周期 这些踩踩坑就会理解

文档能力
~~~~~~~~~~~~~~~~~~~~

* Word 文档编写，看去要专业，尤其对外的
* Excel 里面大量的统计、图表功能，需要善于使用
* PPT 演讲、培训等必备，如何做好 PPT？百度一下...
* 以上所有功能，统统可以安装国产软件WPS完成
* Markdown 非常适合做日常研究记录，还可以转换为其他格式
* 进一步

  + yEd

  + Visio

  + Freemind

  + Sphinx

    - 本技能表就是这个制作

  + Xmind 

基础运维实践
-------------

* 家庭软路由或者树莓派折腾一下
    + 从上帝视角去看家里网络的流量数据（suricata，snort）
    + 查看或者禁用某个内网设备的流量（iptables）
    + 配置一个公网能够接入的 VPN ，搭建一个技术博客
    + 在安全的前提下，映射一个内网的 SSH 端口至互联网， 直观感受一下互联网的暴力破解和攻击力度

* pve/kvm/virtualbox/vmware/docker
    + 大量的操作系统、开发环境、漏洞环境可以随时搭建
    + 借助AI快速上手诸如：FreeBSD，OpenBSD，Solaris 等等系统
    + 根据业务需求组建一个独立的网络环境，可进行测试、开发、漏洞验证

* openWRT/Arduino/Home Assistant
    + 海量的家用路由器，摄像头，以及IoT设备的基础系统
    + 常见IoT设备的操作管理，焊接，代码编译刷写以及传感数据的获取
    + 家用智能设备的单独管控

* 在上述几个条件的基础上，构建自己的私有云环境
    + NAS: 诸多数据的存储池和云盘服务
    + Nginx+webdav+Joplin： 私人的笔记服务
    + BitWarden：私人的密码存储服务

安全运维能力
------------------------

..
  .. toctree::
    :maxdepth: 2

    ./maintain

* 资产测绘
* 已知漏洞扫描
* 基线检查 (安全策略与合规性检查)
* 入侵检测与监控
* 后门排查
* 攻击溯源
* 文件取证
* 威胁情报


:ref:`通用安全能力/概念`
------------------------

.. toctree::
   :maxdepth: 2
   :hidden:

   ./common_sec

* 密码学
* 社会工程学
* 网络发现和管理
* 抓包和流量分析
* 虚拟化与隔离
* 逆向工程
* 恶意文件识别（与 免杀）
* 漏洞分析/挖掘

:ref:`专业安全能力`
------------------------

.. toctree::
   :maxdepth: 2
   :hidden:

   ./special_sec

* Web 安全
* 二进制安全
* 移动安全
* IoT安全
* 浏览器安全
* 区块链安全
* AI 安全

:ref:`工程化能力`
------------------------

.. toctree::
   :maxdepth: 2
   :hidden:

   ./engineering

* 研发能力
* 编码环境
* 前端
* 爬虫进阶
* 调度
* 并发
* 数据结构
* 数据库
* 大数据处理
* DevOps
* 调试
* 持续集成
* 协作
* AI 应用
* 设计思想

牛人 1, 2, 3
------------

* 1 研究：研究东西，有足够洞察力，研究水准不错
* 2 研发：Hack Idea 自己有魄力实现，不懂研发的黑客如同不会游泳的海盗
* 3 工程：研发出来的需要实战、需要工程化，否则只是玩具，而不能成为真的武器

>_